{"version":3,"sources":["components/MenuLink.tsx/MenuLink.tsx","components/MainNav/MainNav.tsx","components/TabLink/TabLink.tsx","components/TabsPage/TabsPage.tsx","App.tsx","index.tsx"],"names":["MenuLink","to","text","className","isActive","classNames","MainNav","TabLink","id","title","onTabPick","onClick","tabs","content","TabsPage","memo","useParams","tabId","useState","activeTabId","setActiveTabId","handleTabSwitch","activeTabContent","useMemo","activeTab","find","tab","map","App","path","index","element","replace","ReactDOM","render","document","getElementById"],"mappings":"gPASaA,EAAsB,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACjC,cAAC,IAAD,CACED,GAAIA,EACJE,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cAAe,CACrD,YAAaD,KAHjB,SAMGF,KCbQI,EAAc,kBACzB,qBACEH,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAUF,GAAG,IAAIC,KAAK,SACtB,cAAC,EAAD,CAAUD,GAAG,QAAQC,KAAK,iB,cCFrBK,EAAsB,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,UAAd,OACjC,cAAC,IAAD,CACET,GAAE,aAAQO,GACVG,QAAS,kBAAMD,EAAUF,IAF3B,SAIGC,KCJCG,EAAO,CACX,CAAEJ,GAAI,QAASC,MAAO,QAASI,QAAS,eACxC,CAAEL,GAAI,QAASC,MAAO,QAASI,QAAS,eACxC,CAAEL,GAAI,QAASC,MAAO,QAASI,QAAS,gBAG7BC,EAAeC,gBAAK,WAC/B,MAAuBC,cAAfC,aAAR,MAAgB,GAAhB,EAEA,EAAsCC,mBAASD,GAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KAEMC,EAAkB,SAACb,GACvBY,EAAeZ,IAGXc,EAAmBC,mBAAQ,WAC/B,IAAMC,EAAYZ,EAAKa,MAAK,SAAAC,GAAG,OAAIA,EAAIlB,KAAOW,KAE9C,OAAgB,OAATK,QAAS,IAATA,OAAA,EAAAA,EAAWX,UAAW,wBAC5B,CAACM,IAEJ,OACE,qCACE,oBAAIhB,UAAU,QAAd,uBAEA,qBAAKA,UAAU,gBAAf,SACE,6BACGS,EAAKe,KAAI,gBAAGnB,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACR,oBACE,UAAQ,MACRN,UAAWE,IAAW,CACpB,YAAaG,IAAOW,IAHxB,SAME,cAAC,EAAD,CACEX,GAAIA,EACJC,MAAOA,EACPC,UAAWW,aAOrB,qBAAKlB,UAAU,QAAQ,UAAQ,aAA/B,SACGmB,UChDIM,EAAM,kBACjB,qCACE,cAAC,EAAD,IAEA,qBAAKzB,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAO0B,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,QAAS,cAACjB,EAAD,MACtB,cAAC,IAAD,CAAOe,KAAK,SAASE,QAAS,cAACjB,EAAD,SAGhC,cAAC,IAAD,CAAOe,KAAK,IAAIE,QAAS,oBAAI5B,UAAU,QAAd,yBACzB,cAAC,IAAD,CAAO0B,KAAK,OAAOE,QAAS,cAAC,IAAD,CAAU9B,GAAG,IAAI+B,SAAO,MACpD,cAAC,IAAD,CAAOH,KAAK,IAAIE,QAAS,oBAAI5B,UAAU,QAAd,yCCjBnC8B,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fcdf8812.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const MenuLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames('navbar-item', {\n      'is-active': isActive,\n    })}\n  >\n    {text}\n  </NavLink>\n);\n","import { FC } from 'react';\nimport { MenuLink } from '../MenuLink.tsx/MenuLink';\n\nexport const MainNav: FC = () => (\n  <nav\n    className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n    data-cy=\"Nav\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <MenuLink to=\"/\" text=\"Home\" />\n        <MenuLink to=\"/tabs\" text=\"Tabs\" />\n      </div>\n    </div>\n  </nav>\n);\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  id: string;\n  title: string;\n  onTabPick: (id: string) => void;\n};\n\nexport const TabLink: FC <Props> = ({ id, title, onTabPick }) => (\n  <Link\n    to={`../${id}`}\n    onClick={() => onTabPick(id)}\n  >\n    {title}\n  </Link>\n);\n","import {\n  FC,\n  useState,\n  useMemo,\n  memo,\n} from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { TabLink } from '../TabLink/TabLink';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsPage: FC = memo(() => {\n  const { tabId = '' } = useParams();\n\n  const [activeTabId, setActiveTabId] = useState(tabId);\n\n  const handleTabSwitch = (id: string) => {\n    setActiveTabId(id);\n  };\n\n  const activeTabContent = useMemo(() => {\n    const activeTab = tabs.find(tab => tab.id === activeTabId);\n\n    return activeTab?.content || 'Please select a tab';\n  }, [activeTabId]);\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(({ id, title }) => (\n            <li\n              data-cy=\"Tab\"\n              className={classNames({\n                'is-active': id === activeTabId,\n              })}\n            >\n              <TabLink\n                id={id}\n                title={title}\n                onTabPick={handleTabSwitch}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {activeTabContent}\n      </div>\n    </>\n  );\n});\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { MainNav } from './components/MainNav/MainNav';\nimport { TabsPage } from './components/TabsPage/TabsPage';\n\nexport const App = () => (\n  <>\n    <MainNav />\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"tabs\">\n            <Route index element={<TabsPage />} />\n            <Route path=\":tabId\" element={<TabsPage />} />\n          </Route>\n\n          <Route path=\"/\" element={<h1 className=\"title\">Home page</h1>} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Routes>\n      </div>\n    </div>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}